{"version":3,"sources":["components/card/card.component.jsx","components/card-container/card-container.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","student","id","name","email","CardContainer","students","map","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredStudents","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2UAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,OAAf,UACI,qBACIC,IAAI,WACJC,IAAG,wCAAmCH,EAAMI,QAAQC,GAAjD,mBAEP,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAIN,EAAMI,QAAQG,YCNbC,G,MAAgB,SAAAR,GAAK,OAC1B,qBAAKC,UAAU,iBAAf,SAEQD,EAAMS,SAASC,KACX,SAAAN,GAAO,OACH,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCN9BM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIC,KAAK,SACLb,UAAU,SACVW,YAAaA,EACbG,SAAWF,MCuCRG,E,kDAzCX,aAAc,IAAD,8BACT,gBAeJH,aAAe,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAfzC,EAAKC,MAAQ,CACTb,SAAU,GACVU,YAAa,IAJR,E,qDAUb,WAAqB,IAAD,OAChBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAO5C,WAAU,IAAD,EAC6BC,KAAKN,MAA/Bb,EADH,EACGA,SAAUU,EADb,EACaA,YACZU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAC7CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAKpD,OACI,sBAAK9B,UAAU,MAAf,UACI,oBAAIA,UAAU,UAAd,+BACA,cAAC,EAAD,CACAW,YAAc,kBACdC,aAAgBe,KAAKf,eAErB,cAAC,EAAD,CAAeJ,SAAUoB,W,GApCvBI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4194656a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n    <div className=\"card\">\r\n        <img \r\n            alt=\"Students\" \r\n            src={`https://robohash.org/students/${props.student.id}?size=180x180`}\r\n        />\r\n        <h2> { props.student.name } </h2>\r\n        <p>{props.student.email}</p>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-container.style.css';\r\n\r\nexport const CardContainer = props =>  (\r\n        <div className=\"card-container\">\r\n            {\r\n                props.students.map(\r\n                    student => (\r\n                        <Card key={student.id} student={student}/>\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n);\r\n","import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return(\r\n        <input \r\n            type=\"search\" \r\n            className=\"search\"\r\n            placeholder={placeholder}\r\n            onChange= {handleChange}\r\n        />\r\n    )\r\n    \r\n} ","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './css/inputbox.style.css'\r\nimport {CardContainer} from './components/card-container/card-container.component';\r\nimport { SearchBox } from './components/search-box/search-box.component'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            students: [],\r\n            searchField: ''\r\n        };\r\n\r\n        // this.handleChange = this.handleChange.bind(this); (Need not to write this statement for an arrow function just for a normal js function)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({students: users}));\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({searchField: event.target.value});\r\n    };\r\n\r\n    render() {\r\n        const { students, searchField } = this.state; //Destructing\r\n        const filteredStudents = students.filter( student =>\r\n            student.name.toLowerCase().includes(searchField.toLowerCase())\r\n        ); \r\n        //.filter() will give a new array\r\n        //.includes() checks whether the string value passed inside the includes is actually in the student\r\n\r\n        return (\r\n            <div className='App'>\r\n                <h1 className=\"heading\"> Student Details </h1>\r\n                <SearchBox\r\n                placeholder = 'Search Students'\r\n                handleChange = {this.handleChange}\r\n                />\r\n                <CardContainer students={filteredStudents}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}